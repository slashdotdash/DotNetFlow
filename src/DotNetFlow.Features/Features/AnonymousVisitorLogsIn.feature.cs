// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.7.1.0
//      SpecFlow Generator Version:1.7.0.0
//      Runtime Version:4.0.30319.235
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace DotNetFlow.Features.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.7.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Anonymous visitor logs in")]
    public partial class AnonymousVisitorLogsInFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AnonymousVisitorLogsIn.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Anonymous visitor logs in", "In order to gain reputation within the site\r\nAs a registered user of the site\r\nI " +
                    "want to login to my account", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
  #line 7
    testRunner.Given("a user account has been registered");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Successfully login to the site with username and password")]
        public virtual void SuccessfullyLoginToTheSiteWithUsernameAndPassword()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successfully login to the site with username and password", ((string[])(null)));
#line 9
  this.ScenarioSetup(scenarioInfo);
#line 10
    testRunner.Given("I am on the login page");
#line 11
 testRunner.When("I enter my username and password");
#line 12
 testRunner.And("I press \"Sign In\"");
#line 13
 testRunner.Then("I should be redirected to the home page");
#line 14
 testRunner.And("I should be logged in");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Successfully login to the site with email address and password")]
        public virtual void SuccessfullyLoginToTheSiteWithEmailAddressAndPassword()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successfully login to the site with email address and password", ((string[])(null)));
#line 16
  this.ScenarioSetup(scenarioInfo);
#line 17
    testRunner.Given("I am on the login page");
#line 18
 testRunner.When("I enter my email address and password");
#line 19
 testRunner.And("I press \"Sign In\"");
#line 20
 testRunner.Then("I should be redirected to the home page");
#line 21
 testRunner.And("I should be logged in");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Failed login due to wrong password")]
        public virtual void FailedLoginDueToWrongPassword()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Failed login due to wrong password", ((string[])(null)));
#line 23
  this.ScenarioSetup(scenarioInfo);
#line 24
    testRunner.Given("I am on the login page");
#line 25
 testRunner.When("I enter my email address and the wrong password");
#line 26
 testRunner.And("I press \"Sign In\"");
#line 27
 testRunner.Then("I should see the login failed error message");
#line 28
 testRunner.And("I should not be logged in");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Failed login due to incorrect username")]
        public virtual void FailedLoginDueToIncorrectUsername()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Failed login due to incorrect username", ((string[])(null)));
#line 30
  this.ScenarioSetup(scenarioInfo);
#line 31
    testRunner.Given("I am on the login page");
#line 32
 testRunner.When("I enter an incorrect username and password");
#line 33
 testRunner.And("I press \"Sign In\"");
#line 34
 testRunner.Then("I should see the login failed error message");
#line 35
 testRunner.And("I should not be logged in");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Logout of the site")]
        public virtual void LogoutOfTheSite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Logout of the site", ((string[])(null)));
#line 37
  this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#endregion
